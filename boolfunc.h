#ifndef BOOLFUNC_H
#define BOOLFUNC_H
#include<vector>
#include<iostream>
#include<algorithm>

using namespace std;

class boolfunc
{
    vector<bool> func; //сама булева функция

    bool idT; //тождественно истинная
    bool idF; //тождественно ложная

    vector<string> varnames; //имена переменных
    int countvars; //число переменных

    string exp; //выражение в обычном виде
    vector<vector<int>> inexp; //выражение в оцифрованном виде

    int K0_D1; //КНФ или ДНФ. 0 - КНФ, 1 - ДНФ, -1 - неопределено

    bool getBit(int val, int n); //разбиение номера строки на биты для построения КНФ и ДНФ (вспомогательный метод)
    bool Resolution(); //резолюция (вспомогательный метод)
    void printINEXP(); //печатает оцифрованное выражение (вспомогательный метод)

public:
    boolfunc(); //конструктор, автоматически делающий булеву функцию тождественно ложной с одной переменной
    boolfunc(int vars, bool id_T_F); //конструктор, автоматически делающий булеву функцию тождественно истинной или ложной с заданным колличеством переменных
    boolfunc(vector<bool> f); //конструктор с возможностью задать булеву функцию, подсчёт переменных автоматический (функция может быть урезана, если колличество значений заданном векторе не является степенью двойки)

    void KNF(); //делает совершенную КНФ
    void DNF(); //делает совершенную ДНФ

    void MaxAbsorption(); //максимально возможное поглощение

    void MaxRes(); //максимально возможная резолюция

    void BlakeAlg(bool K0_D1_); //алгоритм Блейка

    string getExp(); //возвращает выражение
};

#endif // BOOLFUNC_H
